{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\React\\\\santosh\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport { useState, useEffect } from 'react';\nimport AddTask from './components/AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const rees = awa;\n    };\n  }); //Add Task\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  }; //Delete task\n\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  }; //Toggle Reminder\n\n\n  const toggleRem = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAddBtn: () => setShowAddTask(!showAddTask),\n      showADD: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleRem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }, this) : 'No Task ASsigned']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"qkMnXyEh5aZ//+FDh/FdrZM7KGU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Projects/React/santosh/src/App.js"],"names":["Header","Tasks","useState","useEffect","AddTask","App","showAddTask","setShowAddTask","tasks","setTasks","fetchTasks","rees","awa","addTask","task","id","Math","floor","random","newTask","deleteTask","filter","toggleRem","map","reminder","length"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,QAAT,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,WAAD,EAAaC,cAAb,IAA6BL,QAAQ,CAAC,KAAD,CAA3C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACAC,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMO,UAAU,GAAC,YAAS;AACxB,YAAMC,IAAI,GAACC,GAAX;AACD,KAFD;AAGD,GAJQ,CAAT,CAHa,CAQb;;AACA,QAAMC,OAAO,GAAEC,IAAD,IAAQ;AACpB,UAAMC,EAAE,GAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,KAAzB,IAAgC,CAAzC;AACA,UAAMC,OAAO,GAAC;AAACJ,MAAAA,EAAD;AAAI,SAAGD;AAAP,KAAd;AACAL,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAUW,OAAV,CAAD,CAAR;AACD,GAJD,CATa,CAiBb;;;AACA,QAAMC,UAAU,GAAIL,EAAD,IAAQ;AACzBN,IAAAA,QAAQ,CAACD,KAAK,CAACa,MAAN,CAAcP,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD,CAlBa,CAuBb;;;AACA,QAAMO,SAAS,GAAIP,EAAD,IAAQ;AACxBN,IAAAA,QAAQ,CAACD,KAAK,CAACe,GAAN,CAAWT,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGD,IAAL;AAAUU,MAAAA,QAAQ,EAAC,CAACV,IAAI,CAACU;AAAzB,KAAjB,GAAsDV,IAA1E,CAAD,CAAR;AACH,GAFC;;AAGF,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,MAAIP,cAAc,CAAC,CAACD,WAAF,CAApC;AAAoD,MAAA,OAAO,EAAEA;AAA7D;AAAA;AAAA;AAAA;AAAA,YADF,EAEGA,WAAW,iBAAE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEO;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFhB,EAGGL,KAAK,CAACiB,MAAN,GAAe,CAAf,gBAAmB,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEjB,KAAd;AAAqB,MAAA,QAAQ,EAAEY,UAA/B;AAA2C,MAAA,QAAQ,EAAEE;AAArD;AAAA;AAAA;AAAA;AAAA,YAAnB,GAAwF,kBAH3F;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOC;;GAlCQjB,G;;KAAAA,G;AAoCT,eAAeA,GAAf","sourcesContent":["import Header from './components/Header'\nimport Tasks from './components/Tasks';\nimport { useState,useEffect} from 'react'\nimport AddTask from './components/AddTask';\n\n\nfunction App() {\n  const [showAddTask,setShowAddTask]=useState(false)\n  const [tasks, setTasks] = useState([])\n  useEffect(()=>{\n    const fetchTasks=async()=>{\n      const rees=awa\n    }\n  })\n  //Add Task\n  const addTask=(task)=>{\n    const id=Math.floor(Math.random()*10000)+1\n    const newTask={id,...task}\n    setTasks([...tasks,newTask])\n  }\n\n\n\n  //Delete task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n\n  //Toggle Reminder\n  const toggleRem = (id) => {\n    setTasks(tasks.map((task) => task.id === id ? { ...task,reminder:!task.reminder} : task))\n}\nreturn (\n  <div className=\"container\">\n    <Header onAddBtn={()=>setShowAddTask(!showAddTask)} showADD={showAddTask}/>\n    {showAddTask&&<AddTask onAdd={addTask}/>}\n    {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleRem} /> : 'No Task ASsigned'}\n  </div>\n);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
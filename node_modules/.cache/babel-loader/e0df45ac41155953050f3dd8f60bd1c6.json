{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\React\\\\santosh\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Tasks from './components/Tasks';\nimport { useState, useEffect } from 'react';\nimport AddTask from './components/AddTask';\nimport { render } from 'react-dom'; //import {BrowserRouter as Router,Routes,Route}  from 'react-router-dom'\n\nimport About from './components/About';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]); // useEffect(()=>{\n  //   const getTasks=async()=>{\n  //     const tasksFromServer=await fetchTasks()\n  //     setTasks(tasksFromServer)\n  //   }\n  //   getTasks()\n  // },[])\n  // const fetchTasks=async()=>{\n  //   const res=await fetch('http://localhost:5000/tasks')\n  //   const data=await res.json()\n  //   return data\n  // }\n  // const fetchTask=async()=>{\n  //   const res=await fetch('http://localhost:5000/tasks/${id}')\n  //   const data=await res.json()\n  //   return data\n  // }\n  //Add Task\n\n  const addTask = async task => {\n    // const res =await fetch('http://localhost:5000/tasks',{\n    //   method:'POST',headers:{\n    //     'Content-type':'application/json'\n    //   },\n    //   body:JSON.stringify(task)\n    // })\n    const res = await fetch('http://127.0.0.1:8000/api/savetask', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    console.log(task); //const data=await res.json()\n\n    console.log(re);\n    setTasks([...tasks, task]); // const id=Math.floor(Math.random()*10000)+1\n    // const newTask={id,...task}\n    // setTasks([...tasks,newTask])\n  }; //Delete task\n\n\n  const deleteTask = async id => {// await fetch(`http://localhost:5000/tasks/${id}`,{method:'DELETE'});\n    //     setTasks(tasks.filter((task) => task.id !== id))\n  }; //   //Toggle Reminder\n\n\n  const toggleRem = async id => {//     const taskToToggle=await fetchTask(id)\n    //     const updTask={...taskToToggle,reminder:!taskToToggle.reminder}\n    //     const res =await fetch('http://localhost:5000/tasks/${id}',{\n    //       method:'PUT',\n    //       headers:{\n    //         'Content-type':'application/json'\n    //       },\n    //       body:JSON.stringify(updTask)\n    //     })\n    //     const data=await res.json()\n    //     setTasks(tasks.map((task) => task.id === id ? { ...task,reminder:!task.reminder} : task))\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"root\",\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onAddBtn: () => setShowAddTask(!showAddTask),\n        showADD: showAddTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          render: props => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n              onAdd: addTask\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 23\n            }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n              tasks: tasks,\n              onDelete: deleteTask,\n              onToggle: toggleRem\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 25\n            }, this) : 'No Task Assigned']\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"S3DpIclh23jK8X+Pc4fpTgkkVQg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Projects/React/santosh/src/App.js"],"names":["Header","Footer","Tasks","useState","useEffect","AddTask","render","About","BrowserRouter","Switch","Route","App","showAddTask","setShowAddTask","tasks","setTasks","addTask","task","res","fetch","method","headers","body","JSON","stringify","console","log","re","deleteTask","id","toggleRem","props","length"],"mappings":"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","sourcesContent":["import Header from './components/Header'\nimport Footer from './components/Footer';\nimport Tasks from './components/Tasks';\nimport { useState,useEffect} from 'react'\nimport AddTask from './components/AddTask';\nimport {render} from 'react-dom'\n//import {BrowserRouter as Router,Routes,Route}  from 'react-router-dom'\nimport About from './components/About';\nimport {BrowserRouter,Switch,Route} from 'react-router-dom';\n\n\nfunction App() {\n  const [showAddTask,setShowAddTask]=useState(false)\n  const [tasks, setTasks] = useState([])\n  // useEffect(()=>{\n  //   const getTasks=async()=>{\n  //     const tasksFromServer=await fetchTasks()\n  //     setTasks(tasksFromServer)\n  //   }\n  //   getTasks()\n  // },[])\n\n  // const fetchTasks=async()=>{\n  //   const res=await fetch('http://localhost:5000/tasks')\n  //   const data=await res.json()\n  //   return data\n  // }\n\n  // const fetchTask=async()=>{\n  //   const res=await fetch('http://localhost:5000/tasks/${id}')\n  //   const data=await res.json()\n  //   return data\n  // }\n\n\n  //Add Task\n  const addTask=async(task)=>{\n    // const res =await fetch('http://localhost:5000/tasks',{\n    //   method:'POST',headers:{\n    //     'Content-type':'application/json'\n    //   },\n    //   body:JSON.stringify(task)\n    // })\n    const res =await fetch('http://127.0.0.1:8000/api/savetask',{\n      method:'POST',\n      headers:{\n        'Content-type':'application/json',\n        'Accept':'application/json'\n      },\n      body:JSON.stringify(task)\n    })\n    console.log(task);\n    //const data=await res.json()\n    console.log(re);\n    setTasks([...tasks,task])\n    // const id=Math.floor(Math.random()*10000)+1\n    // const newTask={id,...task}\n    // setTasks([...tasks,newTask])\n  }\n  //Delete task\n  const deleteTask = async (id) => {\n// await fetch(`http://localhost:5000/tasks/${id}`,{method:'DELETE'});\n//     setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n\n//   //Toggle Reminder\n  const toggleRem = async (id) => {\n//     const taskToToggle=await fetchTask(id)\n//     const updTask={...taskToToggle,reminder:!taskToToggle.reminder}\n\n//     const res =await fetch('http://localhost:5000/tasks/${id}',{\n//       method:'PUT',\n//       headers:{\n//         'Content-type':'application/json'\n//       },\n//       body:JSON.stringify(updTask)\n//     })\n//     const data=await res.json()\n\n//     setTasks(tasks.map((task) => task.id === id ? { ...task,reminder:!task.reminder} : task))\n}\nreturn (\n  \n  <div id=\"root\" className=\"container\">\n    <BrowserRouter>\n    <Header onAddBtn={()=>setShowAddTask(!showAddTask)} showADD={showAddTask}/>\n    <Switch>\n      <Route path='/' exact render={(props)=>(\n      <>{showAddTask&&<AddTask onAdd={addTask}/>}\n    {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleRem} /> : 'No Task Assigned'}\n      </>\n    )}/>\n      <Route path='/about'><About/></Route> \n      {/* component={About}/> */}\n   </Switch>\n    <Footer/>\n    </BrowserRouter>\n  </div>\n);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
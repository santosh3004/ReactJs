{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\React\\\\santosh\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Tasks from './components/Tasks';\nimport { useState, useEffect } from 'react';\nimport AddTask from './components/AddTask'; //import {BrowserRouter as Router,Routes,Route}  from 'react-router-dom'\n\nimport About from './components/About';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  var csrf_token = '<?php echo csrf_token(); ?>';\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []); // const fetchTasks=async()=>{\n  //   const res=await fetch('http://localhost:5000/tasks')\n  //   const data=await res.json()\n  //   console.log(data);\n  //   return data\n  // }\n\n  const fetchTasks = async () => {\n    const res = await fetch('http://api-tasktracker.usedones.xyz/api/tasks');\n    const data = await res.json();\n    console.log(data);\n    return data;\n  };\n\n  const fetchTask = async id => {\n    //   const res=await fetch('http://localhost:5000/tasks/${id}')\n    //   const data=await res.json()\n    //   return data\n    const res = await fetch(`http://api-tasktracker.usedones.xyz/api/task/${id}`);\n    const data = await res.json();\n    return data;\n  }; //Add Task\n\n\n  const addTask = async task => {\n    //   const res =await fetch('http://localhost:5000/tasks',{\n    //     method:'POST',headers:{\n    //       'Content-type':'application/json'\n    //     },\n    //     body:JSON.stringify(task)\n    //   })\n    //var csrf_token='<?php echo csrf_token(); ?>'\n    const res = await fetch('http://api-tasktracker.usedones.xyz/api/savetask', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        'X-CSRF-TOKEN': csrf_token\n      },\n      body: JSON.stringify(task)\n    }); //const data=await res.json()\n    //console.log(data);\n\n    setTasks([...tasks, task]); // const id=Math.floor(Math.random()*10000)+1\n    // const newTask={id,...task}\n    // setTasks([...tasks,newTask])\n  }; //Delete task\n\n\n  const deleteTask = async id => {\n    // await fetch(`http://localhost:5000/tasks/${id}`,{method:'DELETE'});\n    //     setTasks(tasks.filter((task) => task.id !== id))\n    await fetc(`http://api-tasktracker.usedones.xyz/api/delete/${id}`, {\n      method: 'DELETE'\n    });\n    setTasks(tasks.filter(task => task.id !== id));\n  }; //   //Toggle Reminder\n\n\n  const toggleRem = async id => {\n    const taskToToggle = await fetchTask(id); // const updTask={...taskToToggle,reminder:!taskToToggle.reminder\n\n    const updTask = {\n      reminder: !taskToToggle.reminder\n    }; //     const res =await fetch('http://localhost:5000/tasks/${id}',{\n    //       method:'PUT',\n    //       headers:{\n    //         'Content-type':'application/json'\n    //       },\n    //       body:JSON.stringify(updTask)\n    //     })\n    //     const data=await res.json()\n\n    const res = await fetch(`http://api-tasktracker.usedones.xyz/api/updatetask/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n        'X-CSRF-TOKEN': csrf_token\n      },\n      body: JSON.stringify(updTask)\n    });\n    const data = await res.json();\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onAddBtn: () => setShowAddTask(!showAddTask),\n        showADD: showAddTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          render: props => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n              onAdd: addTask\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 23\n            }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n              tasks: tasks,\n              onDelete: deleteTask,\n              onToggle: toggleRem\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 25\n            }, this) : 'No Task Assigned']\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"qkMnXyEh5aZ//+FDh/FdrZM7KGU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Projects/React/santosh/src/App.js"],"names":["Header","Footer","Tasks","useState","useEffect","AddTask","About","BrowserRouter","Switch","Route","App","csrf_token","showAddTask","setShowAddTask","tasks","setTasks","getTasks","tasksFromServer","fetchTasks","res","fetch","data","json","console","log","fetchTask","id","addTask","task","method","headers","body","JSON","stringify","deleteTask","fetc","filter","toggleRem","taskToToggle","updTask","reminder","map","props","length"],"mappings":"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","sourcesContent":["import Header from './components/Header'\nimport Footer from './components/Footer';\nimport Tasks from './components/Tasks';\nimport { useState,useEffect} from 'react'\nimport AddTask from './components/AddTask';\n//import {BrowserRouter as Router,Routes,Route}  from 'react-router-dom'\nimport About from './components/About';\nimport {BrowserRouter,Switch,Route} from 'react-router-dom';\n\n\n\nfunction App() {\n  var csrf_token='<?php echo csrf_token(); ?>'\n  const [showAddTask,setShowAddTask]=useState(false)\n  const [tasks, setTasks] = useState([])\n  useEffect(()=>{\n    const getTasks=async()=>{\n      const tasksFromServer=await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n    getTasks()\n  },[])\n\n  // const fetchTasks=async()=>{\n  //   const res=await fetch('http://localhost:5000/tasks')\n  //   const data=await res.json()\n  //   console.log(data);\n  //   return data\n  // }\n\n  const fetchTasks=async()=>{\n      const res=await fetch('http://api-tasktracker.usedones.xyz/api/tasks')\n      const data=await res.json();\n      console.log(data);\n      return data;\n    }\n\n  const fetchTask=async(id)=>{\n  //   const res=await fetch('http://localhost:5000/tasks/${id}')\n  //   const data=await res.json()\n  //   return data\n    const res=await fetch(`http://api-tasktracker.usedones.xyz/api/task/${id}`)\n    const data=await res.json()\n    return data;\n  }\n\n\n  //Add Task\n  const addTask=async(task)=>{\n  //   const res =await fetch('http://localhost:5000/tasks',{\n  //     method:'POST',headers:{\n  //       'Content-type':'application/json'\n  //     },\n  //     body:JSON.stringify(task)\n  //   })\n    //var csrf_token='<?php echo csrf_token(); ?>'\n    const res =await fetch('http://api-tasktracker.usedones.xyz/api/savetask',{\n      method:'POST',\n      headers:{\n        'Content-type':'application/json',\n        'X-CSRF-TOKEN': csrf_token\n      },\n      body:JSON.stringify(task)\n    })\n    //const data=await res.json()\n    //console.log(data);\n    setTasks([...tasks,task])\n    // const id=Math.floor(Math.random()*10000)+1\n    // const newTask={id,...task}\n    // setTasks([...tasks,newTask])\n  }\n  //Delete task\n  const deleteTask = async (id) => {\n// await fetch(`http://localhost:5000/tasks/${id}`,{method:'DELETE'});\n//     setTasks(tasks.filter((task) => task.id !== id))\n\nawait fetc(`http://api-tasktracker.usedones.xyz/api/delete/${id}`,{method:'DELETE'});\n    setTasks(tasks.filter((task) => task.id !== id))\n\n  }\n\n\n//   //Toggle Reminder\n  const toggleRem = async (id) => {\n    const taskToToggle=await fetchTask(id)\n    // const updTask={...taskToToggle,reminder:!taskToToggle.reminder\n      const updTask={reminder:!taskToToggle.reminder}\n    \n\n//     const res =await fetch('http://localhost:5000/tasks/${id}',{\n//       method:'PUT',\n//       headers:{\n//         'Content-type':'application/json'\n//       },\n//       body:JSON.stringify(updTask)\n//     })\n//     const data=await res.json()\n\n\n    const res =await fetch(`http://api-tasktracker.usedones.xyz/api/updatetask/${id}`,{\n      method:'PUT',\n      headers:{\n        'Content-type':'application/json',\n        'X-CSRF-TOKEN': csrf_token\n      },\n      body:JSON.stringify(updTask)\n    })\n     const data=await res.json()\n\n     setTasks(tasks.map((task) => task.id === id ? { ...task,reminder:!task.reminder} : task))\n}\nreturn (\n  \n  <div className=\"container\">\n    <BrowserRouter>\n    <Header onAddBtn={()=>setShowAddTask(!showAddTask)} showADD={showAddTask}/>\n    <Switch>\n      <Route path='/' exact render={(props)=>(\n      <>{showAddTask&&<AddTask onAdd={addTask}/>}\n    {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleRem} /> : 'No Task Assigned'}\n      </>\n    )}/>\n      <Route path='/about'><About/></Route> \n      {/* component={About}/> */}\n   </Switch>\n    <Footer/>\n    </BrowserRouter>\n  </div>\n);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
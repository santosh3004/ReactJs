{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAddBtn","showADD","Task","task","onDelete","onToggle","onDoubleClick","id","reminder","cursor","day","Tasks","tasks","map","AddTask","onAdd","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","value","onChange","target","placeholder","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAEMA,EAAQ,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,MAAMC,EAAgB,EAAhBA,KAAKC,EAAW,EAAXA,QAC3B,OACI,wBAAQA,QAASA,EAASC,MAAO,CAACC,gBAAgBJ,GAAQK,UAAU,MAApE,SAA2EJ,KAI/EF,EAAOO,aAAa,CAClBN,MAAM,aAQOD,QCfTQ,EAAO,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,MAAMC,EAAoB,EAApBA,SAASC,EAAW,EAAXA,QAC5B,OACE,yBAAQL,UAAU,SAAlB,UACE,6BAAKG,IACL,cAAC,EAAD,CAAQN,QAASO,EAAUT,MAAM,QAAQC,KAAMS,EAAQ,QAAQ,YAKrEH,EAAOD,aAAa,CAClBE,MAAM,gBAMOD,Q,OCRAI,EATH,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,KAAKC,EAAqB,EAArBA,SAASC,EAAY,EAAZA,SAC1B,OACE,sBAAKC,cAAe,kBAAID,EAASF,EAAKI,KAAIX,UAAS,eAAUO,EAAKK,SAAS,WAAW,IAAtF,UACE,+BAAKL,EAAKX,KAAV,IAAgB,cAAC,IAAD,CAASC,QAAS,kBAAIW,EAASD,EAAKI,KAAKb,MAAO,CAACH,MAAM,MAAMkB,OAAO,gBACpF,4BAAIN,EAAKO,UCMAC,EATH,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,MAAMR,EAAqB,EAArBA,SAASC,EAAY,EAAZA,SAC3B,OACE,mCACCO,EAAMC,KAAI,SAACV,GAAD,OACT,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,SAAUA,EAAUC,SAAUA,GAAnDF,EAAKI,UCkCPO,EAtCD,SAAC,GAAW,IAAVC,EAAS,EAATA,MACd,EAAqBC,mBAAS,IAA9B,mBAAOxB,EAAP,KAAYyB,EAAZ,KACA,EAAmBD,mBAAS,IAA5B,mBAAON,EAAP,KAAWQ,EAAX,KACA,EAA6BF,oBAAS,GAAtC,mBAAOR,EAAP,KAAgBW,EAAhB,KAcA,OACE,uBAAMvB,UAAU,WAAWwB,SAbhB,SAACC,GACdA,EAAEC,iBACG9B,GAILuB,EAAM,CAACvB,OAAKkB,MAAIF,aAChBS,EAAQ,IACRC,EAAO,IACPC,GAAY,IANVI,MAAM,oBAUN,UACE,sBAAK3B,UAAU,eAAf,UACE,yCACA,uBAAO4B,KAAK,OAAOC,MAAOjC,EAAMkC,SAAU,SAACL,GAAD,OAAKJ,EAAQI,EAAEM,OAAOF,QAAQG,YAAY,gBAGtF,sBAAKhC,UAAU,eAAf,UACE,+CACA,uBAAO6B,MAAOf,EAAKgB,SAAU,SAACL,GAAD,OAAKH,EAAOG,EAAEM,OAAOF,QAAQD,KAAK,OAAOI,YAAY,wBAGpF,sBAAKhC,UAAU,kCAAf,UACE,iDACA,uBAAOiC,QAASrB,EAAUiB,MAAOjC,EAAMkC,SAAU,SAACL,GAAD,OAAKF,EAAYE,EAAES,cAAcD,UAAUL,KAAK,gBAGnG,uBAAO5B,UAAU,gBAAgB4B,KAAK,SAASC,MAAM,aCM5CM,MApCf,WACE,MAAmCf,oBAAS,GAA5C,mBAAOgB,EAAP,KAAmBC,EAAnB,KACA,EAA0BjB,mBAAS,CAAC,CAClCT,GAAI,EACJf,KAAM,yBACNkB,IAAK,cACLF,UAAU,KAJZ,mBAAOI,EAAP,KAAcsB,EAAd,KAyBF,OACE,sBAAKtC,UAAU,YAAf,UACE,cAAC,EAAD,CAAQI,SAAU,kBAAIiC,GAAgBD,IAAc/B,QAAS+B,IAC5DA,GAAa,cAAC,EAAD,CAASjB,MArBX,SAACZ,GACb,IAAMI,EAAG4B,KAAKC,MAAoB,IAAdD,KAAKE,UAAgB,EACnCC,EAAQ,aAAC/B,MAAMJ,GACrB+B,EAAS,GAAD,mBAAKtB,GAAL,CAAW0B,QAmBlB1B,EAAM2B,OAAS,EAAI,cAAC,EAAD,CAAO3B,MAAOA,EAAOR,SAbxB,SAACG,GAClB2B,EAAStB,EAAM4B,QAAO,SAACrC,GAAD,OAAUA,EAAKI,KAAOA,OAYmBF,SAP/C,SAACE,GACjB2B,EAAStB,EAAMC,KAAI,SAACV,GAAD,OAAUA,EAAKI,KAAOA,EAAZ,2BAAsBJ,GAAtB,IAA2BK,UAAUL,EAAKK,WAAYL,SAMM,uBCzB9EsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.91376f47.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button =({color,text,onClick})=>{\r\nreturn(\r\n    <button onClick={onClick} style={{backgroundColor:color}} className='btn'>{text}</button>\r\n)\r\n}\r\n\r\nButton.defaultProps={\r\n  color:'steelblue'\r\n}\r\n\r\nButton.propTypes={\r\n  text:PropTypes.string.isRequired,\r\n  color:PropTypes.string,\r\n  onClick:PropTypes.func\r\n}\r\nexport default Button ","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\nconst Header=({title,onAddBtn,showADD})=>{\r\n  return(\r\n    <header className='header'>\r\n      <h1>{title}</h1>\r\n      <Button onClick={onAddBtn} color='green' text={showADD?'Close':'Add'}/>\r\n    </header>\r\n  )\r\n}\r\n\r\nHeader.defaultProps={\r\n  title:'Task Tracker',\r\n}\r\n\r\nHeader.propTypes={\r\n  title: PropTypes.string.isRequired,\r\n}\r\nexport default Header","import {FaTimes} from 'react-icons/fa'\r\nconst Task =({task,onDelete,onToggle})=>{\r\n  return(\r\n    <div onDoubleClick={()=>onToggle(task.id)}className={`task ${task.reminder?'reminder':''}`}>\r\n      <h3>{task.text} <FaTimes onClick={()=>onDelete(task.id)} style={{color:'red',cursor:'pointer'}}/></h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Task","import Task from \"./Task\"\r\n\r\nconst Tasks=({tasks,onDelete,onToggle})=>{\r\n  return(\r\n    <>\r\n    {tasks.map((task)=>(\r\n      <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}/>\r\n    ))}\r\n    </>\r\n  )\r\n}\r\nexport default Tasks","import {useState} from 'react'\r\n\r\nconst AddTask=({onAdd})=>{\r\n  const [text,setText]=useState('')\r\n  const [day,setDay]=useState('')\r\n  const [reminder,setReminder]=useState(false)\r\n\r\nconst onSubmit=(e)=>{\r\n  e.preventDefault()\r\n  if (!text) {\r\n    alert('Please Add Task')\r\n    return\r\n  }\r\n  onAdd({text,day,reminder})\r\n  setText('')\r\n  setDay('')\r\n  setReminder(false)\r\n}\r\n\r\n  return(\r\n    <form className='add-form' onSubmit={onSubmit}>\r\n      <div className='form-control'>\r\n        <label>Task</label>\r\n        <input type='text' value={text} onChange={(e)=>setText(e.target.value)} placeholder='Add Task'/>\r\n      </div>\r\n\r\n      <div className='form-control'>\r\n        <label>Day & Time</label>\r\n        <input value={day} onChange={(e)=>setDay(e.target.value)} type='text' placeholder='Add Day and Time'/>\r\n      </div>\r\n\r\n      <div className='form-control form-control-check'>\r\n        <label>Set Reminder</label>\r\n        <input checked={reminder} value={text} onChange={(e)=>setReminder(e.currentTarget.checked)} type='checkbox'/>\r\n      </div>\r\n\r\n      <input className='btn btn-block' type='submit' value='Save'/>\r\n    </form>\r\n  )\r\n}\r\nexport default AddTask","import Header from './components/Header'\nimport Tasks from './components/Tasks';\nimport { useState } from 'react'\nimport AddTask from './components/AddTask';\n\n\nfunction App() {\n  const [showAddTask,setShowAddTask]=useState(false)\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: 'First Task Add Web App',\n    day: 'Nov 29 2021',\n    reminder: true\n  }])\n  //Add Task\n  const addTask=(task)=>{\n    const id=Math.floor(Math.random()*10000)+1\n    const newTask={id,...task}\n    setTasks([...tasks,newTask])\n  }\n\n\n\n  //Delete task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n\n  //Toggle Reminder\n  const toggleRem = (id) => {\n    setTasks(tasks.map((task) => task.id === id ? { ...task,reminder:!task.reminder} : task))\n}\nreturn (\n  <div className=\"container\">\n    <Header onAddBtn={()=>setShowAddTask(!showAddTask)} showADD={showAddTask}/>\n    {showAddTask&&<AddTask onAdd={addTask}/>}\n    {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleRem} /> : 'No Task ASsigned'}\n  </div>\n);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}